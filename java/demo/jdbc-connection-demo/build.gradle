/*//{{{
 * This build file was auto generated by running the Gradle 'init' task
 * by 'codergege' at '16-11-4 上午9:47' with Gradle 3.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*///}}}

apply plugin: 'java'
apply plugin: 'application'

/**
* customizing
*/
sourceCompatibility = 1.8
version = '1.0'
// from application
mainClassName = "cn.codergege.demo.HelloWorld"

jar {
    manifest {
        attributes 'Implementation-Title': 'JDBC Connection Demo',
                    'Implementation-Version': version
    }
}

/**
* dependency management
*/
repositories {
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.5'
    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'

    testCompile 'junit:junit:4.12'
}

/**
* Tasts
/

/**//{{{
* task: inits
* 1) 构建 source sets 目录结构, 生成 cn.codergege.domain dao dao.impl, service,
* service.impl, util 包结构.
* 2) 生成 readme.txt 文件
* 3) 
* todo: 
* 1) 调用 gradle init 任务.
* 2) readme 模板, 时间, author.
*///}}}
task inits {//{{{
    def javaBase = 'src/main/java/cn/codergege'
    def javaResources = 'src/main/resources'
    def testBase = 'src/test/java/cn/codergege'
    def testResources = 'src/test/resources'
    def srcList = ["$javaBase/domain",
                    "$javaBase/dao", 
                    "$javaBase/dao/impl",
                    "$javaBase/service",
                    "$javaBase/service/impl",
                    "$javaBase/util",
                    "$javaResources",
                    "$testBase/domain",
                    "$testBase/dao", 
                    "$testBase/dao/impl",
                    "$testBase/service",
                    "$testBase/service/impl",
                    "$testBase/util",
                    "$testResources"];

    // 1) 构建 source sets 目录
    doLast {
        srcList.each {
            mkdir(it)
        } 
    }

    // 2) 生成 readme.txt
    doLast {
        new File('readme.txt').write(
"""# README
        
""")
    }
                    
}//}}}

/**
* task: prepareDevEnv
* todo:
* 1) copy resources from somedir
*/
task prepareDevEnv {
    doLast {
        println "preparing development environment..."
    }
}
