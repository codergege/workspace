//{{{
/**
* 下载依赖 jar 的项目, 并将这些 jar 复制到 workspace/open-source 中.
*/
//}}}
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'

/**
* customizing
*/
sourceCompatibility = 1.8
version = '1.0'
// local lib dir, 用于复制 oracle, java 驱动
ext.localLib = '/home/codergege/nutstore/open-source'
// 配置文件
ext.configDir = '/home/codergege/nutstore/config'
// 保存用到的依赖类库
ext.workspaceLib = '/home/codergege/workspace/open-source'
// root_project/lib
ext.projectLib = file('lib')

// from application
mainClassName = "cn.codergege.main.Main"

jar {
    manifest {
        attributes 'Implementation-Title': project.name,
                    'Implementation-Version': version
    }
}

/**
* dependency management
*/
repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
}

// define dependency version
ext.springVersion = '4.3.3.RELEASE'

dependencies {//{{{
    // - 本地依赖, ojdbc6.jar
    compile fileTree(dir:'lib', include:['*.jar'])

    // - 日志
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7' 
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    // - 数据库
    // compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.5'
    // compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.40'
    // compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.36'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'
    compile group: 'com.mchange', name: 'c3p0', version: '0.9.5.2'

    // -- mybatis
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.1'
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.0'
    // compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.5'
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.2'

    // - spring
    compile group: 'org.springframework', name: 'spring-core', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-beans', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-context', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-context-support', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-aop', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-aspects', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-jdbc', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-tx', version: project.springVersion

    compile group: 'org.springframework', name: 'spring-test', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-web', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-webmvc', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-orm', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-expression', version: project.springVersion

    // - web
    compile group: 'javax.servlet.jsp.jstl', name: 'jstl-api', version: '1.2'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'javax.servlet.jsp', name: 'jsp-api', version: '2.2'

    // -- file upload
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.2'

    // - poi
    compile group: 'org.apache.poi', name: 'poi', version: '3.15'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.15'

    // - util
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'

    // 测试
    testCompile 'junit:junit:4.12'
}//}}}

/**
* Tasts
/

//{{{
/**
* task: inits
* 1) 建立 lib 目录, 构建 source sets 目录结构, 生成 cn.codergege.domain dao dao.impl, service,
* service.impl, util, main 包结构. 还有 cn.codergege.groovy
* 2) 生成 readme.txt 文件
* 3) 
* todo: 
* 1) 调用 gradle init 任务.
* 2) readme 模板, 时间, author.
*/
//}}}
task inits {//{{{
    def libDir = 'lib'
    def javaBase = 'src/main/java/cn/codergege'
    def groovyBase = 'src/main/groovy/cn/codergege/groovy'
    def javaResources = 'src/main/resources'
    def sqlDir = 'src/main/resources/sql'
    def testBase = 'src/test/java/cn/codergege'
    def testGroovyBase = 'src/test/groovy/cn/codergege/groovy'
    def testResources = 'src/test/resources'
    def srcList = ["$libDir",
                    "$javaBase/domain",
                    "$javaBase/dao", 
                    "$javaBase/dao/impl",
                    "$javaBase/service",
                    "$javaBase/service/impl",
                    "$javaBase/util",
                    "$javaBase/main",
                    "$javaResources",
                    "$sqlDir",
                    "$testBase/domain",
                    "$testBase/dao", 
                    "$testBase/dao/impl",
                    "$testBase/service",
                    "$testBase/service/impl",
                    "$testBase/util",
                    "$testResources",
                    "$groovyBase",
                    "$testGroovyBase"];

    // 1) 构建 source sets 目录
    doLast {
        srcList.each {
            mkdir(it)
        } 
    }

    // 2) 生成 readme.txt
    doLast {
        new File('readme.txt').write(
"""# README
        
""")
    }

    // 3) 生成 Main
    //{{{
    /*
    doLast {
        new File("$javaBase/main/Main.java").write(
"""package cn.codergege.main;

public class Main {

    public static void main(String[] args) {

        System.out.println("Hello!");

    }
}
""")
   }
   */
    //}}}
                    
}//}}}

/**
* task: copyLibs
* desc:
*   copy project.localLib/ojdbc6.jar ... 到 lib 
*/
task copyLib {
    doLast {
        copy {
            from project.localLib
            into project.projectLib
            include 'ojdbc6.jar'
            include "*mysql-connector-java*.jar"
        }
    }
}

/**
* task: copySqlFile
* desc:
*   copy project.configDir 到 src/main/resources/sql
*/
task copySqlFile {
    doLast {
        copy {
            from project.configDir
            into 'src/main/resources/sql'
            include 'sql/mysql_demo.sql'
        }
    }
}

/**
* task: prepareDevEnv
* dependsOn: copyLib
* todo:
* 1) copy resources from somedir
*/
task prepare() {
    doLast {
        println "preparing development environment..."
    }
}

/**
* task: copyDependency
*/
task copyDependency(type: Copy) {
    from configurations.runtime
    into project.workspaceLib
}

/**
* task: download
* dependsOn: run, copyDependency
*/
task download(dependsOn:[test, run, copyDependency]) << {
    println "downloading dependency complete!"
}
