//{{{
/**
* 模板工程: spring + mybatis
* - xml 方式配置
* - c3p0 连接池
* - 多数据源配置
* - spring 事务管理 ?
* - mybatis generator
* 
* To Do:
* - sql/oracle_demo.sql
* - 考虑使用 sfl4j + logback 的日志框架, 并加入工程.
* - 加入 junit4 test code
*
* 复制模板工程后需要修改的地方:
* - packagename
* - gradle prepare 后 config.properties, generatorConfig.xml 表
*
* Usage:
* 使用方式一, 复制整个项目.
* 保留 src, lib, build.gradle, 其余全部删除.
* mv build.gradle ../; gradle init; mv ../build.gradle .;
* 手动修改包名, 最好使用 eclipse 重构.
* 
* 使用方式二, 只复制 build.gradle 文件的方式:
* 不推荐, 这样 java 源码就没有了
* gradle init 后, 复制该模板进工程
* 修改 packagename, dependency 等需要修改的地方
* gradle inits 生成 src 目录
* gradle prepare 复制依赖 jar 到 project/lib, 复制 config files
* gradle bGenerator 使用 mybatis generator, 使用 5.1.6.jar 的 mysql 驱动,
* 否则无法正确获取主键.
*/
//}}}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'eclipse-wtp'

/**
* customizing
*/
sourceCompatibility = 1.8//{{{
version = '1.0'
// local lib dir, 用于复制 oracle, java 驱动
ext.localLib = '/home/codergege/nutstore/open-source'
// 配置文件
ext.configDir = '/home/codergege/nutstore/config'
// 保存用到的依赖类库
ext.workspaceLib = '/home/codergege/workspace/open-source'
// root_project/lib
ext.projectLib = file('lib')
//}}}
// property from application
// to change: main class
ext {//{{{
	javaResources = 'src/main/resources'
	pkgname = 'packagename'
	// define dependency version
	springVersion = '4.3.3.RELEASE'
	logbackVersion = '1.1.7'
}//}}}
mainClassName = "cn.codergege.${project.pkgname}.main.Main"

processResources {//{{{

	// 包含 xml 文件
	from('src/main/java') {
		include '**/*.xml'
	}
}//}}}

jar {//{{{
    manifest {
        attributes 'Implementation-Title': project.name,
                    'Implementation-Version': version,
                    'Trusted-Library': true
    }
}//}}}

/**
* dependency management
*/
repositories {//{{{
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}//}}}

dependencies {//{{{
    // - 本地依赖, ojdbc6.jar
    compile fileTree(dir:'lib', include:['*.jar'])

    // - 日志
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: project.logbackVersion
	compile group: 'ch.qos.logback', name: 'logback-core', version: project.logbackVersion
	compile group: 'ch.qos.logback', name: 'logback-access', version: project.logbackVersion

    // - 数据库
    // compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.5'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    // compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'
    compile group: 'com.mchange', name: 'c3p0', version: '0.9.5.2'

    // - util
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'


    // -- mybatis
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.1'
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.0'
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.5'
    // compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.2'

    // - spring
    compile group: 'org.springframework', name: 'spring-core', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-beans', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-context', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-context-support', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-aop', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-aspects', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-jdbc', version: project.springVersion
    compile group: 'org.springframework', name: 'spring-tx', version: project.springVersion

    // 测试
    testCompile 'junit:junit:4.12'
}//}}}

/**
* task: runGenerator
* desc:
*   运行 mybatis generator
*/
task runOne(type: JavaExec, dependsOn:[processResources]) {//{{{
	// 不要用 rumtimeClasspath, 不然其他 java 源文件有编译错误就停止了.
	// classpath = sourceSets.main.runtimeClasspath
	
	// 这样 generator 就和其他东西无关了.
	classpath(sourceSets.main.compileClasspath, sourceSets.main.output.resourcesDir)

	main = 'org.mybatis.generator.api.ShellRunner'

	// arguments to pass to the application
	args '-configfile', project.javaResources + '/generatorConfigOne.xml', '-overwrite',  '-verbose'
}//}}}

task runTwo(type: JavaExec, dependsOn:[processResources]) {//{{{
	// 不要用 rumtimeClasspath, 不然其他 java 源文件有编译错误就停止了.
	// classpath = sourceSets.main.runtimeClasspath
	
	// 这样 generator 就和其他东西无关了.
	classpath(sourceSets.main.compileClasspath, sourceSets.main.output.resourcesDir)

	main = 'org.mybatis.generator.api.ShellRunner'

	// arguments to pass to the application
	args '-configfile', project.javaResources + '/generatorConfigTwo.xml', '-overwrite',  '-verbose'
}//}}}
